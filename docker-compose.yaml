version: '3.8'
name: redpanda-services

services:
  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=starinternational
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      # - ${PWD}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    networks:
      - postgres-network
    ports:
      - "5432:5432"
    
   
  redpanda-0:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.5
    container_name: redpanda-0
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
    networks:
      - postgres-network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
  redpanda-1:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.5
    container_name: redpanda-1
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://redpanda-1:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
      - --advertise-pandaproxy-addr internal://redpanda-1:8082,external://localhost:28082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:28081
      - --rpc-addr redpanda-1:33145
      - --advertise-rpc-addr redpanda-1:33145
      - --seeds redpanda-0:33145
    networks:
      - postgres-network
    ports:
      - 28081:28081
      - 28082:28082
      - 29092:29092
    depends_on:
      - redpanda-0
  redpanda-2:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.5
    container_name: redpanda-2
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:39092
      - --advertise-kafka-addr internal://redpanda-2:9092,external://localhost:39092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:38082
      - --advertise-pandaproxy-addr internal://redpanda-2:8082,external://localhost:38082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:38081
      - --rpc-addr redpanda-2:33145
      - --advertise-rpc-addr redpanda-2:33145
      - --seeds redpanda-0:33145
    networks:
      - postgres-network
    ports:
      - 38081:38081
      - 38082:38082
      - 39092:39092
    depends_on:
      - redpanda-0
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.4.3
    container_name: redpanda-console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    networks:
      - postgres-network
    ports:
      - 8080:8080
      
    depends_on:
      - redpanda-0

  producer:
    build: .  # Path where your Dockerfile is located
    container_name: tms-si-kafka-producer
    restart: always
    env_file: .env
    networks:
      - postgres-network
    depends_on:
      - redpanda-0
    command: python avro_producer.py
    ports:
      - 6000:6000

  consumer:
    build: .  # Path where your Dockerfile is located
    container_name: tms-si-kafka-consumer
    restart: always
    env_file: .env
    networks:
      - postgres-network
    depends_on:
      - redpanda-0
    command: python avro_consumer.py
    # ports:
    #   - 7000:7000
    volumes:
      - .:/app
    links:
      - db

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@starinternational.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - postgres-network
    ports:
      - "5050:80"
    depends_on:
      - db
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - postgres-network
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"

volumes:
  postgres_data:
  minio-data:

networks: 
  postgres-network:
    driver: bridge